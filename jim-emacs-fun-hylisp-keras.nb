(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248338,       5178]
NotebookOptionsPosition[    247149,       5135]
NotebookOutlinePosition[    247504,       5151]
CellTagsIndexPosition[    247461,       5148]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Cosine", " ", "similarity", " "}]], "Input",
 CellChangeTimes->{{3.748129476344486*^9, 3.7481294787776318`*^9}}],

Cell[BoxData[
 RowBox[{"Cosine", " ", "similarity"}]], "Output",
 CellChangeTimes->{3.748129482127603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cosine similarity", "WolframAlphaLong",
 CellChangeTimes->{3.748129494065242*^9}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Cosine similarity", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Word\", \"similarity\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"similarity\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "similarity"}]], Identity], 
                 "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
               0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definitions", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"Definitions\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox["1", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"the quality of being similar\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox["2", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"a Gestalt principle of organization holding that (other \
things being equal) parts of a stimulus field that are similar to each other \
tend to be perceived as belonging together as a unit\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.045], Automatic, Automatic}}, 
               GridBoxSpacings -> {
                "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "American pronunciation", "scanner" -> "Data", "id" -> 
     "Pronunciation:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"Pronunciation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"s,imuhl'eruhtee\"", {
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0},
                 StripOnInput -> False], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    StyleBox[
                    "\"IPA\"", {FontFamily -> "Helvetica", FontSize -> 9, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\": \"", 
                    "\"s\:02cc\:026am\:0259l\:02c8\:025br\:0259ti\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             LineIndent -> 0], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hyphenation", "scanner" -> "Data", "id" -> 
     "Hyphenation:WordData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"Hyphenation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              TemplateBox[{
                StyleBox[
                 RowBox[{"\"sim\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], AutoSpacing -> True], 
                   "\"i\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], AutoSpacing -> True], 
                   "\"lar\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], AutoSpacing -> True], 
                   "\"i\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], AutoSpacing -> True], 
                   "\"ty\""}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0, ZeroWidthTimes -> True]}, "RowDefault"], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"letters\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    StyleBox[
                    "\"  | \"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"syllables\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, 
             "RowWithSeparators"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
Nw==
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{750, 690, 797, 447, 545, 206, 315, 33, 205, 
                    32, 31, 30, 29, 28, 27, 204, 26, 367, 203, 880}}], 
                    
                    PolygonBox[{{579, 738, 822, 592, 686, 424, 532, 66, 217, 
                    65, 64, 63, 62, 61, 60, 216, 59, 372, 215, 478, 320, 591, 
                    423, 711, 531, 837, 647, 767, 58, 214, 57, 56, 55, 54, 53,
                     52, 51, 213, 50, 885, 757, 834, 631, 707, 501, 580, 371, 
                    450, 212, 319, 49, 211, 48, 47, 46, 45, 44, 43, 210, 42, 
                    630, 500, 872, 731, 820}}], 
                    PolygonBox[CompressedData["
1:eJwl1nfYzmUYh/HHSkJD2ZmVrYwko3BURvYme+9NkYpEpey9R5MiIysUyayQ
llEZ2XsWifS5Dn+cx3m/1/29f+/vudfz5Grdo073pIlEIgkGaHRB/2SJxFZ/
l1Tcwk/wZn5J/Zr+Z3kwb0YaVMccmd9QAt2wSX42P45++i9xB+P2aRfnCvwB
uqp/iY3yxfkbTq0+S7uH3FntstyJ12CfenEuxl2wQX4mF8VFdMYR/Y1R17gl
/CCvVc+h/bV8Ee31PIMfwwV0QqP4H9xKfrt2Qc7OY7BO/lF9X/F0Lowr6n3R
VG4D5+Hz6uW1O/Lq+GzyhXgtT+OC6KP/HLeX3xufhcvx++ig/gXWyBeIZ/Ag
9btwCNVQR34BZ+apMnuRP54XY+Xz8SpOJTNFu7vcGe0y3JFXY496Mc7L7bBS
Pg+v4DvVJ2ufjvdBI+O+4Ny8O+Za+xFui+Xyk/hhnEUbNNS/ir/nbKhk3GhO
zsvkH9L3OU/k3DiD1mggs5K/izVDRflRnIyXyufSt4QncE701nc63l//Hu2i
/DS/h1bxWbBYPgcv4vGcHb30n+Ld/FTMqXFzOR23jM+Ez+Sz8UJOqW+c9ilu
j4ZyqzgX/6peJN6XW2CBfFb+lO9QH6t9ktuhgfxKzsm/xN7TzsLN8Yl8Zp7P
KWLPxfzyzzGn8j9pF+ZHeToyqTfDPPmM/DEnVx8def6Jf4wxqGrcNE7LGdSb
4iP59PwhJ9M3KtaAf+RdXAjPx/6KM84PqDfBB/L38/ucVN/IOC+8i3+IM4Mq
8lM4NadTfwHvyd/Hc3kE34u++i/LVeCecTZxUr1snF9ehjny9/BsfpfvjvMj
f0mmPPfg9TihXib2auwtzJJPyzP5NfUk6CR/kEtwVf4U78R7I03sW8yI+4en
J+IDJhLD4z6TP6FdOvYHr8BO9QJxLmPfYpr425wKx1E/0L+UWxr3rXYBzhpz
hqlxzvRN4Vv8Vuwf9R28k/Ojsvzk+B+cUr0eJse+4kn8JqeIc6D/olw5jst8
HY6pl447MM4MJsb+4An8qvp/2gdijVHbuE9iT/Ew9e1IhjoYH9PA4/gVmZva
+2ONUUt+PmfkoXHekQS1MTZx+0tlDL3Bt7ib7NHY13FutItwKZ4Tz4qzitFy
/2EUbmIkXpS7KvMMD+RNuCFbmYfEfYEbcjV5BP8bewWv+/s6H+EaMX/yi2Ke
PWdbzDFn4RGxD+T+wXBci7WM58gOjvXU3xz15ZdzjlhP9XzaV+Wqx/rx37Em
+AvD8LL+6/r+iDsQNY2bxxl4kPo2XJGrxkP5cswVhuBSvH+8k77X0NWYY8aW
4ma8DFvV8/JFuarxrnwhvi9iz8c643ysW7T1n4t++a5o4jlfxT3Oh/U9GXsh
7j0MlDsb7x+/CdA/vvtjHdAPZ9A3nit7mv/kKugSz/KcklyXF2OhembuI3cK
vdELPdED3WNf4CS6YqD8CT4U6xt70NgFcUfGbxLtfJyJ30UXuePojE7oiA5o
j3Zoi2NoE2uT9Pbvm2bGb+S88VvGcytqv8xbcFSuUtyD3Aot0QLN0QxNYy+h
ScxJrL3s7/wcanjex5yeB6hvxmG5inH/xRyhMRqhIRqgPurFZ0XdeEfZ/nE/
xx6P9/CsHXEXcx6ehINyz8W88AHURq3Y+6gRezH2E/bHnoh1i/0Xcx6/TYx/
mv8HvvU+XA==
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$1918378#1"]& ]}}], {}, {}}, {
               GridLines -> Dynamic[
                  Join[{{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, {0, 5, 10, 15, 20}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox[
                    TagBox["2.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "2.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox[
                    TagBox["7.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "7.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox[
                    TagBox["12.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "12.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox[
                    TagBox["17.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "17.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-1.26227808*^10, 
                    FormBox["\"1500\"", TraditionalForm]}, {-9.4671072*^9, 
                    FormBox["\"1600\"", TraditionalForm]}, {-6.3113472*^9, 
                    FormBox["\"1700\"", TraditionalForm]}, {-3.1556736*^9, 
                    FormBox["\"1800\"", TraditionalForm]}, {0., 
                    FormBox["\"1900\"", TraditionalForm]}, {3.1556736*^9, 
                    FormBox["\"2000\"", TraditionalForm]}, {6.3114336*^9, 
                    FormBox["\"2100\"", TraditionalForm]}}, {{-1.26227808*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-9.4671072*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-6.3113472*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-3.1556736*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    3.1556736*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    6.3114336*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, 
                GridLines -> {{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, Automatic}, PlotRangePadding -> None, 
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-1.*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-7.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.25*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.2*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.15*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.1*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.05*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 0.2, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> Scaled[0.75], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  PointSize[Medium], "PointSizeFunction" -> "SmallPointSize", 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{-1.1991715200000267`*^10, 
                  3.408134400000076*^9}, {0, 19.4695}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{None, None}, {None, None}}, 
                Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1540\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2008\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"in \"", "\"occurrences per million words per year\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Linear scale", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Binned", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "Word frequency history", "desc" -> 
         "based on a Google Books sample of one million books in English; \
Michel, J.-B., Y. K. Shen, A. P. Aiden, A. Veres, M. K. Gray, The Google \
Books Team, J. P. Pickett, D. Hoiberg, D. Clancy, P. Norvig, J. Orwant, S. \
Pinker, M. A. Nowak, and E. L. Aiden. \"Quantitative Analysis of Culture \
Using Millions of Digitized Books.\" Science 331 (2011)"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Inflected form", "scanner" -> "Data", "id" -> 
     "InflectedForms:WordData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"InflectedForms\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"similarities\"", {
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}, 
             StripOnInput -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Synonyms", "scanner" -> "Data", "id" -> 
     "Synonyms:WordData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"SynonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"resemblance\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "resemblance"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"law of similarity\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "law of similarity"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show synonym network", "input" -> 
         "Synonyms:WordData__Show synonym network"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
        
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Synonyms:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Synonyms:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Antonym", "scanner" -> "Data", "id" -> 
     "Antonyms:WordData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"AntonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"dissimilarity\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {WordData, "dissimilarity"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Narrower terms", "scanner" -> "Data", "id" -> 
     "Hyponym:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"NarrowerTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"alikeness\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "alikeness"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"analog\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "analog"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"analogue\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "analogue"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"approach\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "approach"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"approximation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "approximation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"correspondence\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "correspondence"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"homogeny\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "homogeny"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"homology\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "homology"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"homomorphism\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "homomorphism"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"homomorphy\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "homomorphy"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"isomorphism\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "isomorphism"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"isomorphy\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "isomorphy"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"likeness\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "likeness"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"parallel\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "parallel"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"parallelism\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "parallelism"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"\[Ellipsis]\""}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "19"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Hyponym:WordData__More"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Broader terms", "scanner" -> "Data", "id" -> 
     "Hypernym:WordData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"BroaderTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"sameness\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "sameness"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gestalt law of organization\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "Gestalt law of organization"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gestalt principle of organization\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {
                    WordData, "Gestalt principle of organization"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
        
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hypernym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hypernym:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "1100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"austerity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "austerity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"charity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "charity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"clarity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "clarity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"dexterity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "dexterity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"disparity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "disparity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"familiarity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "familiarity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"hilarity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "hilarity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"insularity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "insularity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"irregularity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "irregularity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"parity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "parity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"peculiarity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "peculiarity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"polarity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "polarity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"popularity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "popularity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"posterity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "posterity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"prosperity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "prosperity"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"\[Ellipsis]\""}], "   ", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{" ", "\"total:\"", "25"}, 
                    "RowWithSeparator"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on typical American pronunciation\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "4", "value" -> "Sorted alphabetically", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Sorted alphabetically", "input" -> 
           "Rhyme:WordData__Sorted alphabetically"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by length", "input" -> 
           "Rhyme:WordData__Sorted by length"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by syllables", "input" -> 
           "Rhyme:WordData__Sorted by syllables"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by frequency", "input" -> 
           "Rhyme:WordData__Sorted by frequency"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Rhyme:WordData__More"}, {}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "1200", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"dissimilarity\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {WordData, "dissimilarity"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              $CellContext`TagBoxWrapper[
              "Missing" -> "WordDataNotAvailable"]], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Phrase", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "1400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"Phrase\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"law of similarity\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {WordData, "law of similarity"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod15$$ = XMLElement[
   "pod", {"title" -> "Translations", "scanner" -> "Data", "id" -> 
     "ManyTranslations:TranslationData", "position" -> "1450", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Mandarin\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "ChineseMandarin"}]], 
                    Identity], TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:76f8\:4f3c\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"ChineseMandarin", "\:76f8\:4f3c"}}]],
                     Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Cantonese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "ChineseYue"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:76f8\:4f3c\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"ChineseYue", "\:76f8\:4f3c"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Xiang Chinese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "ChineseXiang"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"qiang\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"ChineseXiang", "qiang"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Hakka Chinese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "ChineseHakka"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:985e\:4f3c\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"ChineseHakka", "\:985e\:4f3c"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Hindi\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Hindi"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:0938\:092e\:093e\:0928\:0924\:093e\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Hindi", "\:0938\:092e\:093e\:0928\:0924\:093e"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              FrameStyle -> GrayLevel[0.92]], "Grid"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ManyTranslations:TranslationData__More"}, {}]}]}], Typeset`pod16$$ =
    XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "1500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"similarity.org\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "similarity.org"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"similarity.biz\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "similarity.biz"}]],
                  Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod17$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "1600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"similarity\"][EntityProperty[\"Word\", \
\"NYTCrosswordPuzzleClues\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none\"", "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              $CellContext`TagBoxWrapper["Missing" -> "None"]], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod18$$ = XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "1700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "15"]]}], #& ,
                     SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "15"]]}], #& ,
                     SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
             0], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`pod37$$, Typeset`pod38$$, 
   Typeset`pod39$$, Typeset`pod40$$, Typeset`pod41$$, Typeset`pod42$$, 
   Typeset`pod43$$, Typeset`pod44$$, Typeset`pod45$$, Typeset`pod46$$, 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`aux39$$ = {
   True, False, {False}, True}, Typeset`aux40$$ = {
   True, False, {False}, True}, Typeset`aux41$$ = {
   True, False, {False}, True}, Typeset`aux42$$ = {
   True, False, {False}, True}, Typeset`aux43$$ = {
   True, False, {False}, True}, Typeset`aux44$$ = {
   True, False, {False}, True}, Typeset`aux45$$ = {
   True, False, {False}, True}, Typeset`aux46$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "similarity", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.similarity-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.similarity-_*MathWorld-"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "similarity", "score" -> "0.42311764705882354", "level" -> 
        "medium"}, {}]}], 
    XMLElement["sources", {"count" -> "17"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BookDataSourceInformationNotes.\
html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BridgeDataSourceInformationNotes.\
html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/CityDataSourceInformationNotes.\
html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
DictionaryLookupSourceInformationNotes.html", "text" -> 
        "Dictionary lookup"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/LakeDataSourceInformationNotes.\
html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/MovieDataSourceInformationNotes.\
html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/OceanDataSourceInformationNotes.\
html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/RiverDataSourceInformationNotes.\
html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}], 
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "similarity", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.similarity-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.similarity-_*MathWorld-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "19"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BookDataSourceInformationNotes.\
html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BridgeDataSourceInformationNotes.\
html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/CityDataSourceInformationNotes.\
html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
DictionaryLookupSourceInformationNotes.html", "text" -> 
        "Dictionary lookup"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/LakeDataSourceInformationNotes.\
html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/MovieDataSourceInformationNotes.\
html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/OceanDataSourceInformationNotes.\
html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/RiverDataSourceInformationNotes.\
html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
TranslationDataSourceInformationNotes.html", "text" -> 
        "Translation data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "16", "datatypes" -> 
     "Word", "timedout" -> "Data,Character", "timedoutpods" -> "", "timing" -> 
     "4.747", "parsetiming" -> "0.079", "parsetimedout" -> "false", 
     "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa30401c5b9f945i8e072e00003cc8f11c85iid0291770361261367161273", "id" -> 
     "MSPa30411c5b9f945i8e072e00003i0dfh2ce6f33dc0", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "41", "related" -> "", 
     "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "Language,Translation,Word", "timedout" -> "", "timedoutpods" -> "", 
     "timing" -> "3.767", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "43", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 5, 1.532134`6.937871739115654}, "Line" -> 2, 
    "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}, Typeset`failedpods$$ = {
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
    38, 39, 40, 41, 42, 43, 44, 45, 46}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Cosine similarity"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
         Typeset`pod41$$, Typeset`pod42$$, Typeset`pod43$$, Typeset`pod44$$, 
         Typeset`pod45$$, Typeset`pod46$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
         Typeset`aux41$$, Typeset`aux42$$, Typeset`aux43$$, Typeset`aux44$$, 
         Typeset`aux45$$, Typeset`aux46$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {764., 770.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
          Typeset`pod41$$, Typeset`pod42$$, Typeset`pod43$$, Typeset`pod44$$, 
          Typeset`pod45$$, Typeset`pod46$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
          Typeset`aux41$$, Typeset`aux42$$, Typeset`aux43$$, Typeset`aux44$$, 
          Typeset`aux45$$, Typeset`aux46$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa30401c5b9f945i8e072e00003cc8f11c85iid0291770361261367161273", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.748129502067925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["a = 1, b = 2, a + b", "WolframAlphaLong",
 CellChangeTimes->{{3.748129636100142*^9, 3.748129646988428*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "a = 1, b = 2, a + b", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ReplaceAll[a + b, {a -> 1, b -> 2}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               TagBox[
                RowBox[{"a", "+", "b"}], HoldForm], 
               StyleBox["\" where \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], 
               RowBox[{
                 RowBox[{"a", "\[LongEqual]", "1"}], ",", 
                 RowBox[{"b", "\[LongEqual]", "2"}]}]}, "RowDefault"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "EvaluateAt", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"a + b /. {a -> 1, b -> 2}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["3", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "2", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "NumberMath", "desc" -> " referring to math", "input" -> 
          "*C.2-_*NumberMath-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NonNegativeDecimalInteger", "desc" -> "a decimal number", 
          "input" -> "*C.2-_*NonNegativeDecimalInteger-"}, {}]}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.209", 
    "parsetiming" -> "0.9", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa1204519139d99h9h4hb170000344ddii2cdaaga0d", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "21", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa1204619139d99h9h4hb1700005gg28c5f34ei268c561598085328412281", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 7, 29.964464`8.229181494755197}, "Line" -> 3,
     "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "a = 1, b = 2, a + b"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {99., 104.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.74812965003927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["A\[CenterDot]B = cos(\[Theta])\[DoubleVerticalBar]A\[DoubleVerticalBar]\
\[DoubleVerticalBar]B\[DoubleVerticalBar]", "WolframAlphaLong",
 CellChangeTimes->{
  3.74813001205101*^9, {3.748130273519415*^9, 3.7481302757126417`*^9}, 
   3.748130308199728*^9, {3.7481303390549088`*^9, 3.748130373254875*^9}, {
   3.7481304339485893`*^9, 3.748130438166504*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "A\[CenterDot]B = cos(\[Theta])\[DoubleVerticalBar]A\[DoubleVerticalBar]\
\[DoubleVerticalBar]B\[DoubleVerticalBar]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"A B == Cos[\[Theta]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"A", " ", "B"}], "\[LongEqual]", 
               TagBox[
                RowBox[{"cos", "(", "\[Theta]", ")"}], Identity]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"TrigToExp[A B == Cos[\[Theta]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"A", " ", "B"}], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox[
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]"}]], "2"], 
                 "+", 
                 FractionBox[
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"]}], 
               Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Solutions", "scanner" -> "Reduce", "id" -> 
     "SymbolicSolution", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Reduce[A B == Cos[\[Theta]], {A, B, \[Theta]}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"\[Theta]", "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "n"}], "-", 
                    RowBox[{
                    SuperscriptBox["cos", 
                    RowBox[{"-", "1"}]], "(", 
                    RowBox[{"A", " ", "B"}], ")"}]}], Identity]}], 
                    RowBox[{"n", "\[Element]", 
                    TagBox["\[DoubleStruckCapitalZ]", 
                    Function[{}, Integers]]}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"\[Theta]", "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["cos", 
                    RowBox[{"-", "1"}]], "(", 
                    RowBox[{"A", " ", "B"}], ")"}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "n"}]}], Identity]}], 
                    RowBox[{"n", "\[Element]", 
                    TagBox["\[DoubleStruckCapitalZ]", 
                    Function[{}, Integers]]}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "SymbolicSolution__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "SymbolicSolution__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {"text" -> "cos^(-1)(x) is the inverse cosine function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/ArcCos.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/ArcCos", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/InverseCosine.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{
                  SuperscriptBox["cos", 
                   RowBox[{"-", "1"}]], "(", "x", ")"}], "\" \"", 
                "\"is the inverse cosine function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {"text" -> "Z is the set of integers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Integers.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Z.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TagBox["\[DoubleStruckCapitalZ]", 
                 Function[{}, Integers]], "\" \"", 
                "\"is the set of integers\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Implicit derivatives", "scanner" -> 
     "ImplicitDifferentiation", "id" -> "ImplicitDerivatives", "position" -> 
     "400", "error" -> "false", "numsubpods" -> "6"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"A", "(", 
                    RowBox[{"B", ",", "\[Theta]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Theta]"}], MultilineFunction -> 
                None], "\[LongEqual]", 
               TagBox[
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"sin", "(", "\[Theta]", ")"}], "B"]}], Identity]}],
              HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"A", "(", 
                    RowBox[{"B", ",", "\[Theta]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "B"}], MultilineFunction -> None], 
               "\[LongEqual]", 
               TagBox[
                RowBox[{"-", 
                  FractionBox["A", "B"]}], Identity]}], HoldForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"B", "(", 
                    RowBox[{"A", ",", "\[Theta]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Theta]"}], MultilineFunction -> 
                None], "\[LongEqual]", 
               TagBox[
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"sin", "(", "\[Theta]", ")"}], "A"]}], Identity]}],
              HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"B", "(", 
                    RowBox[{"A", ",", "\[Theta]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "A"}], MultilineFunction -> None], 
               "\[LongEqual]", 
               TagBox[
                RowBox[{"-", 
                  FractionBox["B", "A"]}], Identity]}], HoldForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"\[Theta]", "(", 
                    RowBox[{"A", ",", "B"}], ")"}]}], 
                RowBox[{"\[PartialD]", "B"}], MultilineFunction -> None], 
               "\[LongEqual]", 
               TagBox[
                RowBox[{
                  RowBox[{"-", "A"}], " ", 
                  RowBox[{"csc", "(", "\[Theta]", ")"}]}], Identity]}], 
             HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                  RowBox[{"\[Theta]", "(", 
                    RowBox[{"A", ",", "B"}], ")"}]}], 
                RowBox[{"\[PartialD]", "A"}], MultilineFunction -> None], 
               "\[LongEqual]", 
               TagBox[
                RowBox[{
                  RowBox[{"-", "B"}], " ", 
                  RowBox[{"csc", "(", "\[Theta]", ")"}]}], Identity]}], 
             HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "ImplicitDerivatives__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "csc(x) is the cosecant function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Csc.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Csc", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Cosecant.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"csc", "(", "x", ")"}], "\" \"", 
                "\"is the cosecant function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False, False, False, False, False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "A\[CenterDot]B = cos(\[Theta])", "score" -> "0.6666666666666666", 
        "level" -> "high"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "5.144", 
    "parsetiming" -> "0.644", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa70221ie8c9cb3e582a6i000023i7ff37a54a576c", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "17", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 21, 0.323641`6.262638523564471}, "Line" -> 
    11, "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = 
   "A\[CenterDot]B = cos(\[Theta])\[DoubleVerticalBar]A\[DoubleVerticalBar]\
\[DoubleVerticalBar]B\[DoubleVerticalBar]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {320., 325.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.748130460407222*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["B = [[1, 2], [2, 2]] , Norm[B]", "WolframAlphaLong",
 CellChangeTimes->{{3.74813046619741*^9, 3.748130517728977*^9}, {
  3.748130578169928*^9, 3.7481305878392143`*^9}, {3.748130764274687*^9, 
  3.74813076778788*^9}, {3.748130816190592*^9, 3.748130824414435*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "B = [[1, 2], [2, 2]] , Norm[B]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"{B == {{1, 2}, {2, 2}}, Norm[{B}]}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"B", "\[LongEqual]", 
                   TagBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "2"}, {"2", "2"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    Identity]}], ",", 
                 TemplateBox[{
                   RowBox[{"{", "B", "}"}]}, "Norm"]}], "}"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> 
         "left double bracketing bar expr right double bracketing bar gives \
the norm of a number, vector, or matrix"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Norm.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"expr"}, "Norm"], "\" \"", 
                "\"gives the norm of a number, vector, or matrix\""}, 
               "RowDefault"], TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"{", 
              RowBox[{
                RowBox[{"B", "\[LongEqual]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "2"}, {"2", "2"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Identity]}], ",", 
                TemplateBox[{"B"}, "Abs"]}], "}"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> 
         "left bracketing bar z right bracketing bar is the absolute value of \
z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"z"}, "Abs"], "\" \"", 
                "\"is the absolute value of\"", "\" \"", "z"}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "1.1440000000000001", "parsetiming" -> "0.773", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSPa55371fcd20g6d3gdb12f00004h47054g7h0abai5", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "45", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa55381fcd20g6d3gdb12f00004741143eih7ca036514813895611993283", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 27, 20.870617`8.072110272048471}, "Line" -> 
    16, "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "B = [[1, 2], [2, 2]] , Norm[B]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {111., 117.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.748130840909635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Norm[[[1, 2], [2, 2]]]", "WolframAlphaLong",
 CellChangeTimes->{{3.748130859781617*^9, 3.748130903026204*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Norm[[[1, 2], [2, 2]]]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input information", "scanner" -> "Formula", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   StyleBox["\"probabilities for the normal distribution\"", 
                    GrayLevel[0], StripOnInput -> False], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                 TagBox[
                  PaneBox[
                  "\"mean\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"1"}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"left endpoint\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"2"}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"right endpoint\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"2"}, "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{1, 1}, {1, 2}} -> 
                   GrayLevel[0.9568627450980393]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Formula", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", 
               "\"the right endpoint must be larger than the left endpoint\"",
                "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}, StripOnInput -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "6"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Formula", "word" -> "Norm 1 2 2", "desc" -> "a formula", 
          "input" -> "*MC.Norm+1+2+2-_*Formula-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "SloppyFunction", "word" -> "Norm", "desc" -> "a function",
           "input" -> "*MC.Norm+1+2+2-_*SloppyFunction-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SelectFormulaVariable", "count" -> "6", "word" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "mean", "input" -> 
          "*FSVar.Q.*6.6-.1-_*NormalProbabilities.mu-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "standard deviation", 
          "input" -> "*FSVar.Q.*6.6-.1-_*NormalProbabilities.sigma-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "left endpoint", "input" -> 
          "*FSVar.Q.*6.6-.1-_*NormalProbabilities.l-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "right endpoint", "input" -> 
          "*FSVar.Q.*6.6-.1-_*NormalProbabilities.r-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "endpoint", "input" -> 
          "*FSVar.Q.*6.6-.1-_*NormalProbabilities.z-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "probability", "input" -> 
          "*FSVar.Q.*6.6-.1-_*NormalProbabilities.pr-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SelectFormulaVariable", "count" -> "5", "word" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "left endpoint", "input" -> 
          "*FSVar.Q.*8.8-.2-_*NormalProbabilities.l-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "right endpoint", "input" -> 
          "*FSVar.Q.*8.8-.2-_*NormalProbabilities.r-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "mean", "input" -> 
          "*FSVar.Q.*8.8-.2-_*NormalProbabilities.mu-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "standard deviation", 
          "input" -> "*FSVar.Q.*8.8-.2-_*NormalProbabilities.sigma-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "endpoint", "input" -> 
          "*FSVar.Q.*8.8-.2-_*NormalProbabilities.z-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SelectFormulaVariable", "count" -> "5", "word" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "right endpoint", "input" -> 
          "*FSVar.Q.*10.10-.2-_*NormalProbabilities.r-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "left endpoint", "input" -> 
          "*FSVar.Q.*10.10-.2-_*NormalProbabilities.l-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "mean", "input" -> 
          "*FSVar.Q.*10.10-.2-_*NormalProbabilities.mu-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "standard deviation", 
          "input" -> "*FSVar.Q.*10.10-.2-_*NormalProbabilities.sigma-"}, {}], 
        
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> "endpoint", "input" -> 
          "*FSVar.Q.*10.10-.2-_*NormalProbabilities.z-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaSelect", "template" -> 
        "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities", "desc" -> 
          "probabilities for the normal distribution", "input" -> 
          "FSelect_**NormalProbabilities--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ZScore", "desc" -> "z\[Hyphen]score calculator", "input" -> 
          "FSelect_**ZScore--"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include ${desc1}", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "NormalProbabilities.sigma", "desc" -> 
          "standard deviation", "input" -> 
          "*FVarOpt-_**NormalProbabilities.sigma-.*NormalProbabilities.l-.*\
NormalProbabilities.r-.*NormalProbabilities.mu--"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "Norm 1 2 2", "score" -> "0.3563051948051948", "level" -> 
        "medium"}, {}]}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Formula", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.849", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa85121b32e01823g7eede00003i4ed7ceb898d181", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "42", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 28, 28.663504`8.20990426161231}, "Line" -> 
    17, "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Norm[[[1, 2], [2, 2]]]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {217., 222.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.748130908759841*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"A", " ", "=", " ", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], ",", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.748130920797323*^9, 3.7481309650395947`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell["length of vector (1,4,-2)", "WolframAlphaLong",
 CellChangeTimes->{3.74813125186586*^9}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "length of vector (1,4,-2)", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"length\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TemplateBox[{
                    StyleBox["\"vector \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    FormBox[
                    TemplateBox[{"\"\[VeryThinSpace]\"", 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["1", HoldForm], 
                    TagBox["4", HoldForm], 
                    TagBox[
                    RowBox[{"-", "2"}], HoldForm]}, "RowWithSeparators"], 
                    "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                    "RowDefault"], TraditionalForm]}, "RowDefault"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Vector", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[Norm[{1, 4, -2}]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SqrtBox["21"], "\[TildeTilde]", "4.58257569495584`"}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Vector plot", "scanner" -> "Vector", "id" -> 
     "VectorPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              Graphics3DBox[{
                GrayLevel[0], 
                Glow[
                 RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                Arrow3DBox[
                 TubeBox[{{0, 0, 0}, {1, 4, -2}}, 
                  Scaled[0.005]]]}, Axes -> True, BoxStyle -> GrayLevel[0.75],
                Ticks -> Automatic, 
               PlotRange -> {{-0.050000000000000044`, 
                1.05}, {-0.20000000000000018`, 4.2}, {-2.1, 
                0.10000000000000009`}}, 
               ImageSize -> {{100., 250.}, {100., 250.}}, 
               Method -> {"ResolveAsTriangles" -> False}], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   FormBox[
                    TemplateBox[{"\"\[VeryThinSpace]\"", 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["1", HoldForm], 
                    TagBox["4", HoldForm], 
                    TagBox[
                    RowBox[{"-", "2"}], HoldForm]}, "RowWithSeparators"], 
                    "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                    "RowDefault"], TraditionalForm], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  
                  ItemBox[#2, Alignment -> {Inherited, Bottom}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Normalized vector", "scanner" -> "Vector", "id" -> 
     "NormalizedVector", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"{1, 4, -2}/Norm[{1, 4, -2}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TemplateBox[{"\"\[VeryThinSpace]\"", 
                RowBox[{"(", "\[NoBreak]", 
                  TemplateBox[{",", "\",\"", 
                    TagBox[
                    FractionBox["1", 
                    SqrtBox["21"]], HoldForm], 
                    TagBox[
                    FractionBox["4", 
                    SqrtBox["21"]], HoldForm], 
                    TagBox[
                    RowBox[{"-", 
                    FractionBox["2", 
                    SqrtBox["21"]]}], HoldForm]}, "RowWithSeparators"], 
                  "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, "RowDefault"],
               TraditionalForm], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "NormalizedVector__Approximate form"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Spherical coordinates", "scanner" -> "Vector", "id" -> 
     "SphericalCoordinates", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "N[{Norm[{1, 4, -2}], ArcSin[Norm[{1, 4}]/Norm[{1, 4, -2}]], \
ArcTan[1, 4]}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{
                StyleBox[
                 TemplateBox[{
                   RowBox[{"r", "\[TildeTilde]", "4.58257569495584`"}], 
                   "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"radius\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0], "\", \""}, "RowDefault"], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {15, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[15], Selectable -> False], 
              TemplateBox[{
                StyleBox[
                 TemplateBox[{
                   RowBox[{"\[Theta]", "\[TildeTilde]", 
                    FormBox[
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\" \"", "64.1233099391725`", 
                    "\"\[Degree]\""}, "RowWithSeparators"], 
                    TraditionalForm]}], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"polar angle\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0], "\", \""}, "RowDefault"], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {15, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[15], Selectable -> False], 
              StyleBox[
               TemplateBox[{
                 RowBox[{"\[Phi]", "\[TildeTilde]", 
                   FormBox[
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\" \"", "75.96375653207353`", 
                    "\"\[Degree]\""}, "RowWithSeparators"], 
                    TraditionalForm]}], "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"azimuthal angle\"", "\[NoBreak]",
                     "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
               0]}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Exact form", "input" -> 
         "SphericalCoordinates__Exact form"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Corresponding line segment", "scanner" -> "Vector", 
     "id" -> "CorrespondingLineSegment", "position" -> "600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"z == -2 t && y == 4 t && x == t && 1 >= t >= 0"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{
                RowBox[{"x", "\[LongEqual]", "t"}], "\", \"", 
                RowBox[{"y", "\[LongEqual]", 
                  TagBox[
                   RowBox[{"4", " ", "t"}], Identity]}], "\", \"", 
                RowBox[{"z", "\[LongEqual]", 
                  TagBox[
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "t"}], Identity]}]}, 
               "RowDefault"], 
              StyleBox["\"  for  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "1"}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
    "VectorProperty", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "2.443", "parsetiming" -> "1.839", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa75881159f1659f5674bb000015fh2hc602gdbbh4", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "47", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa75891159f1659f5674bb00000hhb07d5hg8900663940777145929605518", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2018, 10, 10, 11, 34, 16.363267`7.966445001638792}, "Line" -> 
    18, "SessionID" -> 21461161641747257345}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "length of vector (1,4,-2)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{741., {326., 331.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.748131256560789*^9}]
}, Open  ]],

Cell["length of vector (1,4,-2, 1)", "WolframAlphaLong",
 CellChangeTimes->{{3.748138747479195*^9, 3.7481387513350143`*^9}}]
},
WindowSize->{808, 839},
WindowMargins->{{Automatic, 16}, {5, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 8, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 32, "Input"],
Cell[719, 26, 106, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[862, 33, 87, 1, 41, "WolframAlphaLong"],
Cell[952, 36, 157022, 3237, 1544, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158011, 3278, 113, 1, 41, "WolframAlphaLong"],
Cell[158127, 3281, 7275, 144, 213, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165439, 3430, 360, 5, 41, "WolframAlphaLong"],
Cell[165802, 3437, 30610, 638, 655, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196449, 4080, 268, 3, 41, "WolframAlphaLong"],
Cell[196720, 4085, 11103, 226, 238, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207860, 4316, 116, 1, 41, "WolframAlphaLong"],
Cell[207979, 4319, 14454, 296, 449, "Print"]
}, Open  ]],
Cell[222448, 4618, 306, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[222779, 4631, 94, 1, 41, "WolframAlphaLong"],
Cell[222876, 4634, 24130, 495, 667, "Print"]
}, Open  ]],
Cell[247021, 5132, 124, 1, 41, "WolframAlphaLong"]
}
]
*)

